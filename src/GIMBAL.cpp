//
// Created by 86189 on 2024/3/31.
//
#include "GIMBAL.h"
#include "UART.h"
#include "define.h"
#include "can.h"
#include "MOTOR.h"
#include "TOP.h"
#include "main.h"
#include "main.h"
YUN_TYPEDEF_MOTOR_ YUN_V_GIMBAL_PITCH;
YUN_TYPEDEF_MOTOR_ YUN_V_GIMBAL_YAW;

void GIMBAL_CAL(TYPEDEF_DBUS *dbus_data,YUN_TYPEDEF_MOTOR_ *YUN_V_GIMBAL_PITCH,YUN_TYPEDEF_MOTOR_ *YUN_V_GIMBAL_YAW)
{
//    YUN_F_MOTOR_CLEAR(&GIMBAL_PITCH,YUN_D_MOTOR_GIMBAL_PIT);
//    YUN_F_MOTOR_CLEAR(&GIMBAL_YAW,YUN_D_MOTOR_GIMBAL_YAW);
    YUN_V_GIMBAL_PITCH->DATA.AIM += dbus_data->REMOTE.CH0_int16 * 0.001f;
    YUN_V_GIMBAL_YAW->DATA.AIM +=dbus_data->REMOTE.CH2_int16 * 0.001f;
    if(YUN_V_GIMBAL_PITCH->DATA.AIM > 5200)
    {
        YUN_V_GIMBAL_PITCH->DATA.AIM = 5200;
    }
    if(YUN_V_GIMBAL_PITCH->DATA.AIM < 1800)
    {
        YUN_V_GIMBAL_PITCH->DATA.AIM = 1800;
    }
    YUN_F_MOTOR_PID_GIMBAL(YUN_V_GIMBAL_PITCH, YUN_V_GIMBAL_PITCH->DATA.ANGLE_NOW, YUN_V_GIMBAL_PITCH->DATA.SPEED_NOW);
    YUN_F_MOTOR_PID_GIMBAL(YUN_V_GIMBAL_YAW, YUN_V_GIMBAL_YAW->DATA.ANGLE_NOW, YUN_V_GIMBAL_YAW->DATA.SPEED_NOW);

}

[[noreturn]] void YUN_F_GIMBAL_THREAD(TYPEDEF_DBUS *YUN_V_DBUS)
{



    while(1){
        GIMBAL_CAL(YUN_V_DBUS,&YUN_V_GIMBAL_PITCH,&YUN_V_GIMBAL_YAW);
        YUN_F_CAN_RECEIVE(&YUN_V_GIMBAL_PITCH,&TEST,YUN_D_CAN_2);
        YUN_F_CAN_RECEIVE(&YUN_V_GIMBAL_YAW,&TEST,YUN_D_CAN_2);
        YUN_F_CAN_SEND(YUN_D_CAN_2, 0X2FF,YUN_V_GIMBAL_PITCH.PID_P.out.ALL_OUT,0,YUN_V_GIMBAL_YAW.PID_P.out.ALL_OUT,0);
    }

}